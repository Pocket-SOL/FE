name: Deploy to EC2

on:
  push:
    branches:
      - main # main 브랜치에 push될 때 트리거

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2 # 레포지토리 코드를 체크아웃

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/react-app .
          docker push ${{ secrets.DOCKER_USERNAME }}/react-app

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # ubuntu_app-network가 없으면 생성
            docker network ls | grep ubuntu_app-network || docker network create ubuntu_app-network

            # 최신 이미지를 pull하고 기존 컨테이너를 중단 및 삭제 후 새로 시작
            docker pull ${{ secrets.DOCKER_USERNAME }}/react-app:latest
            docker stop react-app || true
            docker rm react-app || true

            # 프론트엔드 컨테이너를 ubuntu_app-network에 연결하여 실행
            docker run -d --name react-app --network ubuntu_app-network -p 80:80 --env-file /home/ubuntu/BE/.env ${{ secrets.DOCKER_USERNAME }}/react-app:latest
